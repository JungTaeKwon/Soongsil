과제 1

두 개의 정수를 입력받아 몫과 나머지를 출력하는 프로그램을 작성하여라

피 연산자 2개를 main 에서 입력 받는다.
- 피 연산자를 저장하기 위한 num1, num2 변수를 main 함수에 선언한다.
- 몫과 나머지를 저장하기 위한 q, r 변수를 main 함수에 선언한다.
- 전역변수를 사용하면 안 된다. (-3점)
몫과 나머지를 계산하는 didivde 함수를 작성한다.
- divide 함수는 몫과 나머지를 모두 계산한다. 이 함수는 몫과 나머지를 계산할 뿐 출력하지 않는다. (-2점)
- main 함수의 num1, num2 값을 divide 함수에서 변경하면 안 된다. (-2점)
0으로 나누는 경우에 대한 예외처리를 한다. (-2점)
몫과 나머지는 main 함수에서 출력한다.
ex) 7 / 3 = 2, 7 % 3 = 1

과제 2

프로그램 3.6과 3.7을 완성하여라. 프로그램 조건 및 테스트 방법은 아래와 같다.

1. Bizcard 클래스를 정의한다. 
1.1 멤버변수는 name, address, office_phone, mobile_phone이다. name과 address는 문자열 포인터 변수이며, office_phone과 mobile_phone은 11자리 정수를 저장하는 정수 변수이다.
1.2 생성자를 정의한다. 생성자는 이름, 주소, 전화번호 2개를 입력받고, 이름과 주소의 경우 동적 메모리를 할당하여 저장한다.
1.3 복사생성자와 대입연산자를 정의한다.
1.4 소멸자를 정의하며 동적 메모리를 해제한다.
1.5 이름, 주소, 전화번호들을 출력하는 ShowInfo() 멤버함수를 정의한다.
2. 프로그램 3.6에서 Bag 용량(capacity)의 초기값은 10이 아닌 3으로 수정
3. 프로그램 3.7에서 Bag의 생성자, 소멸자, Size(), IsEmpty(), Element(), Push(), Pop() 구현
3.1 Element() 연산은 배열 임의의 위치에 있는 원소를 리턴
3.2 Pop() 연산은 배열 임의의 위치에 있는 원소를 삭제
3.3 필요한 경우 교재의 멤버함수 코드를 변경 및 추가
4. 빈 Bag에 대해 Size(), IsEmpty(), Element() 연산 결과 출력 확인
5. Push()연산을 3번 수행하여 Bizcard 객체를 3개 추가한 후, Size(), IsEmpty(), Element() 연산 결과 출력 확인
6. Push()연산을 4번 수행하여 Bizcard 객체를 총 7개 추가한 후, Size(), IsEmpty(), Element() 연산 결과 출력 확인
7. Pop()연산을 2번 수행하여 Bizcard 객체를 2개 삭제한 후, Size(), IsEmpty(), Element() 연산 결과 출력 확인

※ intro.ppt의 과제 작성 및 제출 방법 준수할 것

과제 3

 

체인이 프로그램 4.6과 같이 정의되었다고 가정한다.

C++ 템플릿 클래스 Chain<T>를 완전히 코딩하고 테스트하라.

1) - 13)을 구현해야 한다. 단, 원소는 0번째부터 시작한다고 가정한다.

 

1) 초기에 공백 체인을 생성하는 생성자o

2) 체인의 모든 원소를 삭제하는 소멸자o

3) 체인의 맨 앞에 삽입하는 함수o

4) 체인의 맨 뒤에 삽입하는 함수o

5) 리스트의 첫 번째 원소를 반환하는 Front 함수

6) 리스트의 마지막 원소를 반환하는 Back 함수

7) 리스트의 i번째 원소를 반환하는 함수 Get(i)

8) 체인의 맨 앞에서 원소를 삭제하는 함수

9) 체인의 맨 뒤에서 원소를 삭제하는 함수

10) i번째 원소 뒤에 삽입하는 함수

11) i번째 원소를 삭제하는 함수

12) 반복자

13) accumulate 알고리즘 사용 가능

 

테스트 방법

1부터 9까지의 정수를 갖는 노드를 추가한다. (자료구조 4장 폴더의 11장 강의자료 9페이지 Number 클래스 객체를 노드에 추가)
반복자를 이용하여 체인의 각 노드들을 출력하여 1부터 9까지 순차적으로 출력되는지 확인한다.
0을 맨 앞에 삽입한다.
반복자를 이용하여 전체 노드의 값을 출력한다.
10을 맨 뒤에 삽입한다.
반복자를 이용하여 전체 노드의 값을 출력한다.
Front를 호출하여 0이 나오는지 확인한다.
Back을 호출하여 10이 나오는지 확인한다.
Get(2)를 호출하여 2가 나오는지 확인한다.
맨 앞에 있는 0을 삭제한다.
반복자를 이용하여 전체 노드의 값을 출력한다.
맨 뒤에 있는 10을 삭제한다.
반복자를 이용하여 전체 노드의 값을 출력한다.
3과 4 노드 사이에 100을 삽입한다. (2번째 원소 뒤에 삽입)
반복자를 이용하여 전체 노드의 값을 출력한다.
6을 삭제한다. (6번째 원소 삭제)
accumulate 알고리즘을 사용하여 전체 노드의 총합을 출력한다.
 

구현 여부와 미 구현 여부를 1) ~ 13)으로 표기할 것(과제 제출 방법 및 감점요인은 intro 파일 참고)

이원 탐색 트리 클래스를 완성하여라. 단, 트리 노드는 pair(학번, 점수)로 표현한다. 
또한 삭제 함수의 단순화를 위해서 자식이 2개인 노드를 삭제할 경우, 오른쪽 서브 트리의 가장 작은 원소로 대체한다.

1.﻿이원 탐색 트리의 노드는 다음과 같은 순서로 추가된다. (insert 함수 사용)
﻿
20220033(90), 20220050(73), 20220043(99), 20220011(82), 20220024(78), 20220046(96), 20220001(72), 20220008(88), 20220036(77), 20220056(93), 20220053(82), 20220059(100)

2.중위 순회를 수행하여 모든 노드의 학번과 점수를 출력한다. (inorder 함수 사용)
﻿
3.킷값이 20220050인 노드를 삭제한다. (delete 함수 사용)
﻿
4.중위 순회를 수행하여 모든 노드의 학번과 점수를 출력한다. (inorder 함수 사용)
﻿
5.킷값이 20220008인 노드를 삭제한다. (delete 함수 사용)
﻿
6.중위 순회를 수행하여 모든 노드의 학번과 점수를 출력한다. (inorder 함수 사용)
﻿
7.킷값이 20220056인 노드를 삭제한다. (delete 함수 사용)
﻿
8.중위 순회를 수행하여 모든 노드의 학번과 점수를 출력한다. (inorder 함수 사용)
﻿
9.킷값이 20220056인 노드가 있는지 확인하여 학번과 점수를 출력한다. (get 함수 사용)
﻿
10.킷값이 20220043인 노드가 있는지 확인하여 학번과 점수를 출력한다. (get 함수 사용)
